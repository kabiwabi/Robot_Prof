COMP 474/6741 Intelligent Systems (Winter 2024)
Worksheet #3: Knowledge Base Queries & Linked Open Data
Task 1. How is Concordia University in the DBpedia knowledge graph linked to Wikidata? Find the Ï
property andobject for:
<http://dbpedia.org/resource/Concordia University >
Task 2. Your rst SPARQL query: What can you nd in DBpedia with Ï
SELECT ?o
WHERE {
<http://dbpedia.org/resource/Concordia_University> dbp:location ?o
}
You can run this query using DBpedia's public SPARQL endpoint at https://dbpedia.org/sparql/.
Task 3. Let's try out DESCRIBE : Can you explain the result from Ï
DESCRIBE ?s
WHERE { ?s geo:lat "45.496944"^^xsd:float .
?s geo:long "-73.578056"^^xsd:float . }
Note that the prex abbreviations geoandxsdare pre-dened in the query interface.1
1You can see all the pre-dened prexes here: https://dbpedia.org/sparql/?help=nsdeclCOMP 474/6741 Worksheet: Knowledge Base Queries & Linked Open Data Winter 2024
Task 4. Now nd all predicates andobjects that have dbr:Concordia University as the subject : Ï
SELECT . . .
WHERE {
. . .
}
Hint: the subject URI is given and you need variables for the predicate and the object. Note that you
can use the pre-dened prex dbr(forhttp://dbpedia.org/resource/ ) in your query.
Task 5. Create a query that prints out the URI and optionally thefoaf:homepage of all universities Ï
and colleges located in Montreal:
PREFIX dbr: <http://dbpedia.org/resource/>
SELECT ?uname ?uhomepage
WHERE {
. . .
}
Hint: Look for a property that gives you \all colleges and universities in Montreal." Note that Concordia
doesn't have a foaf:homepage listed in DBpedia, but Dawson College has one.
Task 6. Using a FILTER , nd all universities and colleges in Montreal that have more than 10000 students Ï
(dbo:numberOfStudents ):
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?uni ?num
WHERE {
. . .
FILTER
}
Bonus task: sort the output by the number of students (you'll need an ORDER BY clause).
Task 7. If you ask Eliza, \Is the Yangtze river longer than the Nile River?" , you'll get a passive-aggressive Ï
answer like \I'll ask the questions, if you don't mind!" . Can you do better by writing a SPARQL ASK query
for the DBpedia knowledge graph?
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>
ASK
{
. . .
}
Hint: the URIs for the two rivers are dbr:Yangtze and dbr:Nile . Find the property for the length , bind
each value to a variable and add a FILTER to check if one is bigger than the other.