Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Introduction to Information Retrieval
http://informationretrieval.org
IIR 3: Dictionaries and tolerant retrieval
Hinrich Sch¨ utze
Center for Information and Language Processing, Universit y of Munich
2014-04-10
Sch¨ utze: Dictionaries and tolerant retrieval 1 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Overview
1Recap
2Dictionaries
3Wildcard queries
4Edit distance
5Spelling correction
6Soundex
Sch¨ utze: Dictionaries and tolerant retrieval 2 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Outline
1Recap
2Dictionaries
3Wildcard queries
4Edit distance
5Spelling correction
6Soundex
Sch¨ utze: Dictionaries and tolerant retrieval 3 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Type/token distinction
Token– an instance of a word or term occurring in a
document
Type– an equivalence class of tokens
In June, the dog likes to chase the cat in the barn.
12 word tokens, 9 word types
Sch¨ utze: Dictionaries and tolerant retrieval 4 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Problems in tokenization
What are the delimiters? Space? Apostrophe? Hyphen?
For each of these: sometimes they delimit, sometimes they
don’t.
No whitespace in many languages! (e.g., Chinese)
No whitespace in Dutch, German, Swedish compounds
(Lebensversicherungsgesellschaftsangestellter )
Sch¨ utze: Dictionaries and tolerant retrieval 5 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Problems with equivalence classing
A term is an equivalence class of tokens.
How do we deﬁne equivalence classes?
Numbers (3/20/91 vs. 20/3/91)
Case folding
Stemming, Porter stemmer
Morphological analysis: inﬂectional vs. derivational
Equivalence classing problems in other languages
More complex morphology than in English
Finnish: a single verb may have 12,000 diﬀerent forms
Accents, umlauts
Sch¨ utze: Dictionaries and tolerant retrieval 6 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Skip pointers
16 28 72
551 982 4 8 16 19 23 28 43
1 2 3 5 8 41 51 60 71Brutus
Caesar
Sch¨ utze: Dictionaries and tolerant retrieval 7 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Positional indexes
Postings lists in a nonpositional index: each posting is just a docID
Postings lists in a positional index: each posting is a docID and a list of
positions
Example query: “to1be2or3not4to5be6”
to, 993427:
/an}bracketle{t1:/an}bracketle{t7,18,33, 72, 86, 231/an}bracketri}ht;
2:/an}bracketle{t1, 17, 74, 222, 255 /an}bracketri}ht;
4:/an}bracketle{t8,16,190,429,433/an}bracketri}ht;
5:/an}bracketle{t363, 367/an}bracketri}ht;
7:/an}bracketle{t13, 23, 191/an}bracketri}ht; .../an}bracketri}ht
be, 178239:
/an}bracketle{t1:/an}bracketle{t17,25/an}bracketri}ht;
4:/an}bracketle{t17,191, 291,430,434/an}bracketri}ht;
5:/an}bracketle{t14, 19, 101/an}bracketri}ht; .../an}bracketri}ht
Document 4 is a match!
Sch¨ utze: Dictionaries and tolerant retrieval 8 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Positional indexes
With a positional index, we can answer phrase queries .
With a positional index, we can answer proximity queries .
Sch¨ utze: Dictionaries and tolerant retrieval 9 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Take-away
Sch¨ utze: Dictionaries and tolerant retrieval 10 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Take-away
Tolerant retrieval: What to do if there is no exact match
between query term and document term
Sch¨ utze: Dictionaries and tolerant retrieval 10 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Take-away
Tolerant retrieval: What to do if there is no exact match
between query term and document term
Wildcard queries
Sch¨ utze: Dictionaries and tolerant retrieval 10 / 114Recap Dictionaries Wildcard queries Edit distance Spelling corr ection Soundex
Take-away
Tolerant retrieval: What to do if there is no exact match
between query term and document term
Wildcard queries
Spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 10 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Outline
1Recap
2Dictionaries
3Wildcard queries
4Edit distance
5Spelling correction
6Soundex
Sch¨ utze: Dictionaries and tolerant retrieval 11 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Inverted index
For each term t, we store a list of all documents that contain t.
Brutus−→124113145173174
Caesar−→124561657132...
Calpurnia−→23154101
...
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright /bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
dictionary postings
Sch¨ utze: Dictionaries and tolerant retrieval 12 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Inverted index
For each term t, we store a list of all documents that contain t.
Brutus−→124113145173174
Caesar−→124561657132...
Calpurnia−→23154101
...
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright /bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
dictionary postings
Sch¨ utze: Dictionaries and tolerant retrieval 12 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionaries
The dictionary is the data structure for storing the term
vocabulary.
Sch¨ utze: Dictionaries and tolerant retrieval 13 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionaries
The dictionary is the data structure for storing the term
vocabulary.
Term vocabulary : thedata
Sch¨ utze: Dictionaries and tolerant retrieval 13 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionaries
The dictionary is the data structure for storing the term
vocabulary.
Term vocabulary : thedata
Dictionary : thedata structure for storing the term vocabulary
Sch¨ utze: Dictionaries and tolerant retrieval 13 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionary as array of ﬁxed-width entries
For each term, we need to store a couple of items:
Sch¨ utze: Dictionaries and tolerant retrieval 14 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionary as array of ﬁxed-width entries
For each term, we need to store a couple of items:
document frequency
Sch¨ utze: Dictionaries and tolerant retrieval 14 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionary as array of ﬁxed-width entries
For each term, we need to store a couple of items:
document frequency
pointer to postings list
Sch¨ utze: Dictionaries and tolerant retrieval 14 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionary as array of ﬁxed-width entries
For each term, we need to store a couple of items:
document frequency
pointer to postings list
...
Sch¨ utze: Dictionaries and tolerant retrieval 14 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionary as array of ﬁxed-width entries
For each term, we need to store a couple of items:
document frequency
pointer to postings list
...
Assume for the time being that we can store this information
in a ﬁxed-length entry.
Sch¨ utze: Dictionaries and tolerant retrieval 14 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionary as array of ﬁxed-width entries
For each term, we need to store a couple of items:
document frequency
pointer to postings list
...
Assume for the time being that we can store this information
in a ﬁxed-length entry.
Assume that we store these entries in an array.
Sch¨ utze: Dictionaries and tolerant retrieval 14 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Dictionary as array of ﬁxed-width entries
term document
frequencypointer to
postings list
a 656,265 −→
aachen 65 −→
... ... ...
zulu 221 −→
space needed: 20 bytes 4 bytes 4 bytes
How do we look up a query term qiin this array at query time?
That is: which data structure do we use to locate the entry (row)
in the array where qiis stored?
Sch¨ utze: Dictionaries and tolerant retrieval 15 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Data structures for looking up term
Two main classes of data structures: hashes and trees
Sch¨ utze: Dictionaries and tolerant retrieval 16 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Data structures for looking up term
Two main classes of data structures: hashes and trees
Some IR systems use hashes, some use trees.
Sch¨ utze: Dictionaries and tolerant retrieval 16 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Data structures for looking up term
Two main classes of data structures: hashes and trees
Some IR systems use hashes, some use trees.
Criteria for when to use hashes vs. trees:
Sch¨ utze: Dictionaries and tolerant retrieval 16 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Data structures for looking up term
Two main classes of data structures: hashes and trees
Some IR systems use hashes, some use trees.
Criteria for when to use hashes vs. trees:
Is there a ﬁxed number of terms or will it keep growing?
Sch¨ utze: Dictionaries and tolerant retrieval 16 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Data structures for looking up term
Two main classes of data structures: hashes and trees
Some IR systems use hashes, some use trees.
Criteria for when to use hashes vs. trees:
Is there a ﬁxed number of terms or will it keep growing?
What are the relative frequencies with which various keys wi ll
be accessed?
Sch¨ utze: Dictionaries and tolerant retrieval 16 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Data structures for looking up term
Two main classes of data structures: hashes and trees
Some IR systems use hashes, some use trees.
Criteria for when to use hashes vs. trees:
Is there a ﬁxed number of terms or will it keep growing?
What are the relative frequencies with which various keys wi ll
be accessed?
How many terms are we likely to have?
Sch¨ utze: Dictionaries and tolerant retrieval 16 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Hashes
Each vocabulary term is hashed into an integer, its row
number in the array
Sch¨ utze: Dictionaries and tolerant retrieval 17 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Hashes
Each vocabulary term is hashed into an integer, its row
number in the array
At query time: hash query term, locate entry in ﬁxed-width
array
Sch¨ utze: Dictionaries and tolerant retrieval 17 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Hashes
Each vocabulary term is hashed into an integer, its row
number in the array
At query time: hash query term, locate entry in ﬁxed-width
array
Pros: Lookup in a hash is faster than lookup in a tree.
Sch¨ utze: Dictionaries and tolerant retrieval 17 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Hashes
Each vocabulary term is hashed into an integer, its row
number in the array
At query time: hash query term, locate entry in ﬁxed-width
array
Pros: Lookup in a hash is faster than lookup in a tree.
Lookup time is constant.
Sch¨ utze: Dictionaries and tolerant retrieval 17 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Hashes
Each vocabulary term is hashed into an integer, its row
number in the array
At query time: hash query term, locate entry in ﬁxed-width
array
Pros: Lookup in a hash is faster than lookup in a tree.
Lookup time is constant.
Cons
Sch¨ utze: Dictionaries and tolerant retrieval 17 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Hashes
Each vocabulary term is hashed into an integer, its row
number in the array
At query time: hash query term, locate entry in ﬁxed-width
array
Pros: Lookup in a hash is faster than lookup in a tree.
Lookup time is constant.
Cons
no way to ﬁnd minor variants ( resumevs.r´ esum´ e)
Sch¨ utze: Dictionaries and tolerant retrieval 17 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Hashes
Each vocabulary term is hashed into an integer, its row
number in the array
At query time: hash query term, locate entry in ﬁxed-width
array
Pros: Lookup in a hash is faster than lookup in a tree.
Lookup time is constant.
Cons
no way to ﬁnd minor variants ( resumevs.r´ esum´ e)
no preﬁx search (all terms starting with automat)
Sch¨ utze: Dictionaries and tolerant retrieval 17 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Hashes
Each vocabulary term is hashed into an integer, its row
number in the array
At query time: hash query term, locate entry in ﬁxed-width
array
Pros: Lookup in a hash is faster than lookup in a tree.
Lookup time is constant.
Cons
no way to ﬁnd minor variants ( resumevs.r´ esum´ e)
no preﬁx search (all terms starting with automat)
need to rehash everything periodically if vocabulary keeps
growing
Sch¨ utze: Dictionaries and tolerant retrieval 17 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Trees
Trees solve the preﬁx problem (ﬁnd all terms starting with
automat).
Sch¨ utze: Dictionaries and tolerant retrieval 18 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Trees
Trees solve the preﬁx problem (ﬁnd all terms starting with
automat).
Simplest tree: binary tree
Sch¨ utze: Dictionaries and tolerant retrieval 18 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Trees
Trees solve the preﬁx problem (ﬁnd all terms starting with
automat).
Simplest tree: binary tree
Search is slightly slower than in hashes: O(logM), whereMis
the size of the vocabulary.
Sch¨ utze: Dictionaries and tolerant retrieval 18 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Trees
Trees solve the preﬁx problem (ﬁnd all terms starting with
automat).
Simplest tree: binary tree
Search is slightly slower than in hashes: O(logM), whereMis
the size of the vocabulary.
O(logM) only holds for balanced trees.
Sch¨ utze: Dictionaries and tolerant retrieval 18 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Trees
Trees solve the preﬁx problem (ﬁnd all terms starting with
automat).
Simplest tree: binary tree
Search is slightly slower than in hashes: O(logM), whereMis
the size of the vocabulary.
O(logM) only holds for balanced trees.
Rebalancing binary trees is expensive.
Sch¨ utze: Dictionaries and tolerant retrieval 18 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Trees
Trees solve the preﬁx problem (ﬁnd all terms starting with
automat).
Simplest tree: binary tree
Search is slightly slower than in hashes: O(logM), whereMis
the size of the vocabulary.
O(logM) only holds for balanced trees.
Rebalancing binary trees is expensive.
B-treesmitigate the rebalancing problem.
Sch¨ utze: Dictionaries and tolerant retrieval 18 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Trees
Trees solve the preﬁx problem (ﬁnd all terms starting with
automat).
Simplest tree: binary tree
Search is slightly slower than in hashes: O(logM), whereMis
the size of the vocabulary.
O(logM) only holds for balanced trees.
Rebalancing binary trees is expensive.
B-treesmitigate the rebalancing problem.
B-tree deﬁnition: every internal node has a number of
children in the interval [ a,b] wherea,bare appropriate
positive integers, e.g., [2 ,4].
Sch¨ utze: Dictionaries and tolerant retrieval 18 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
Binary tree
Sch¨ utze: Dictionaries and tolerant retrieval 19 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Sounde x
B-tree
Sch¨ utze: Dictionaries and tolerant retrieval 20 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Outline
1Recap
2Dictionaries
3Wildcard queries
4Edit distance
5Spelling correction
6Soundex
Sch¨ utze: Dictionaries and tolerant retrieval 21 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Wildcard queries
mon*: ﬁnd all docs containing any term beginning with mon
Sch¨ utze: Dictionaries and tolerant retrieval 22 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Wildcard queries
mon*: ﬁnd all docs containing any term beginning with mon
Easy with B-tree dictionary: retrieve all terms tin the range:
mon≤t<moo
Sch¨ utze: Dictionaries and tolerant retrieval 22 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Wildcard queries
mon*: ﬁnd all docs containing any term beginning with mon
Easy with B-tree dictionary: retrieve all terms tin the range:
mon≤t<moo
*mon: ﬁnd all docs containing any term ending with mon
Sch¨ utze: Dictionaries and tolerant retrieval 22 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Wildcard queries
mon*: ﬁnd all docs containing any term beginning with mon
Easy with B-tree dictionary: retrieve all terms tin the range:
mon≤t<moo
*mon: ﬁnd all docs containing any term ending with mon
Maintain an additional tree for terms backwards
Sch¨ utze: Dictionaries and tolerant retrieval 22 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Wildcard queries
mon*: ﬁnd all docs containing any term beginning with mon
Easy with B-tree dictionary: retrieve all terms tin the range:
mon≤t<moo
*mon: ﬁnd all docs containing any term ending with mon
Maintain an additional tree for terms backwards
Then retrieve all terms tin the range: nom ≤t<non
Sch¨ utze: Dictionaries and tolerant retrieval 22 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Wildcard queries
mon*: ﬁnd all docs containing any term beginning with mon
Easy with B-tree dictionary: retrieve all terms tin the range:
mon≤t<moo
*mon: ﬁnd all docs containing any term ending with mon
Maintain an additional tree for terms backwards
Then retrieve all terms tin the range: nom ≤t<non
Result: A set of terms that are matches for wildcard query
Sch¨ utze: Dictionaries and tolerant retrieval 22 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Wildcard queries
mon*: ﬁnd all docs containing any term beginning with mon
Easy with B-tree dictionary: retrieve all terms tin the range:
mon≤t<moo
*mon: ﬁnd all docs containing any term ending with mon
Maintain an additional tree for terms backwards
Then retrieve all terms tin the range: nom ≤t<non
Result: A set of terms that are matches for wildcard query
Then retrieve documents that contain any of these terms
Sch¨ utze: Dictionaries and tolerant retrieval 22 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
How to handle * in the middle of a term
Example: m*nchen
Sch¨ utze: Dictionaries and tolerant retrieval 23 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
How to handle * in the middle of a term
Example: m*nchen
We could look up m* and *nchen in the B-tree and intersect
the two term sets.
Sch¨ utze: Dictionaries and tolerant retrieval 23 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
How to handle * in the middle of a term
Example: m*nchen
We could look up m* and *nchen in the B-tree and intersect
the two term sets.
Expensive
Sch¨ utze: Dictionaries and tolerant retrieval 23 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
How to handle * in the middle of a term
Example: m*nchen
We could look up m* and *nchen in the B-tree and intersect
the two term sets.
Expensive
Alternative: permuterm index
Sch¨ utze: Dictionaries and tolerant retrieval 23 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
How to handle * in the middle of a term
Example: m*nchen
We could look up m* and *nchen in the B-tree and intersect
the two term sets.
Expensive
Alternative: permuterm index
Basic idea: Rotate every wildcard query, so that the * occurs
at the end.
Sch¨ utze: Dictionaries and tolerant retrieval 23 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
How to handle * in the middle of a term
Example: m*nchen
We could look up m* and *nchen in the B-tree and intersect
the two term sets.
Expensive
Alternative: permuterm index
Basic idea: Rotate every wildcard query, so that the * occurs
at the end.
Store each of these rotations in the dictionary, say, in a B-tree
Sch¨ utze: Dictionaries and tolerant retrieval 23 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
For term hello: addhello$,ello$h,llo$he,lo$hel,o$hell, and
$helloto the B-tree where $ is a special symbol
Sch¨ utze: Dictionaries and tolerant retrieval 24 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm→term mapping
Sch¨ utze: Dictionaries and tolerant retrieval 25 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
For X, look up X$
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
For X, look up X$
For X*, look up $X*
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
For X, look up X$
For X*, look up $X*
For *X, look up X$*
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
For X, look up X$
For X*, look up $X*
For *X, look up X$*
For *X*, look up X*
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
For X, look up X$
For X*, look up $X*
For *X, look up X$*
For *X*, look up X*
For X*Y, look up Y$X*
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
For X, look up X$
For X*, look up $X*
For *X, look up X$*
For *X*, look up X*
For X*Y, look up Y$X*
Example: For hel*o, look up o$hel*
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
For X, look up X$
For X*, look up $X*
For *X, look up X$*
For *X*, look up X*
For X*Y, look up Y$X*
Example: For hel*o, look up o$hel*
Permuterm index would better be called a permuterm tree.
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Permuterm index
Forhello, we’ve stored: hello$,ello$h,llo$he,lo$hel,o$hell,
$hello
Queries
For X, look up X$
For X*, look up $X*
For *X, look up X$*
For *X*, look up X*
For X*Y, look up Y$X*
Example: For hel*o, look up o$hel*
Permuterm index would better be called a permuterm tree.
But permuterm index is the more common name.
Sch¨ utze: Dictionaries and tolerant retrieval 26 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing a lookup in the permuterm index
Rotate query wildcard to the right
Sch¨ utze: Dictionaries and tolerant retrieval 27 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing a lookup in the permuterm index
Rotate query wildcard to the right
Use B-tree lookup as before
Sch¨ utze: Dictionaries and tolerant retrieval 27 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing a lookup in the permuterm index
Rotate query wildcard to the right
Use B-tree lookup as before
Problem: Permuterm more than quadruples the size of the
dictionary compared to a regular B-tree. (empirical number)
Sch¨ utze: Dictionaries and tolerant retrieval 27 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes
More space-eﬃcient than permuterm index
Sch¨ utze: Dictionaries and tolerant retrieval 28 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes
More space-eﬃcient than permuterm index
Enumerate all character k-grams (sequence of kcharacters)
occurring in a term
Sch¨ utze: Dictionaries and tolerant retrieval 28 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes
More space-eﬃcient than permuterm index
Enumerate all character k-grams (sequence of kcharacters)
occurring in a term
2-grams are called bigrams.
Sch¨ utze: Dictionaries and tolerant retrieval 28 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes
More space-eﬃcient than permuterm index
Enumerate all character k-grams (sequence of kcharacters)
occurring in a term
2-grams are called bigrams.
Example: from April is the cruelest month we get the bigrams:
$a ap pr ri il l$ $i is s$ $t th he e$ $c cr ru ue el le es st t$ $m
mo on nt h$
Sch¨ utze: Dictionaries and tolerant retrieval 28 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes
More space-eﬃcient than permuterm index
Enumerate all character k-grams (sequence of kcharacters)
occurring in a term
2-grams are called bigrams.
Example: from April is the cruelest month we get the bigrams:
$a ap pr ri il l$ $i is s$ $t th he e$ $c cr ru ue el le es st t$ $m
mo on nt h$
$ is a special word boundary symbol, as before.
Sch¨ utze: Dictionaries and tolerant retrieval 28 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes
More space-eﬃcient than permuterm index
Enumerate all character k-grams (sequence of kcharacters)
occurring in a term
2-grams are called bigrams.
Example: from April is the cruelest month we get the bigrams:
$a ap pr ri il l$ $i is s$ $t th he e$ $c cr ru ue el le es st t$ $m
mo on nt h$
$ is a special word boundary symbol, as before.
Maintain an inverted index from bigrams to the terms that
contain the bigram
Sch¨ utze: Dictionaries and tolerant retrieval 28 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Postings list in a 3-gram inverted index
etr beetroot metric petrify retrieval ✲ ✲ ✲ ✲
Sch¨ utze: Dictionaries and tolerant retrieval 29 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram (bigram, trigram, ...) indexes
Note that we now have two diﬀerent types of inverted indexes
Sch¨ utze: Dictionaries and tolerant retrieval 30 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram (bigram, trigram, ...) indexes
Note that we now have two diﬀerent types of inverted indexes
The term-document inverted index for ﬁnding documents
based on a query consisting of terms
Sch¨ utze: Dictionaries and tolerant retrieval 30 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram (bigram, trigram, ...) indexes
Note that we now have two diﬀerent types of inverted indexes
The term-document inverted index for ﬁnding documents
based on a query consisting of terms
Thek-gram index for ﬁnding terms based on a query
consisting of k-grams
Sch¨ utze: Dictionaries and tolerant retrieval 30 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcarded terms in a bigram index
Query mon* can now be run as:
$mandmoandon
Sch¨ utze: Dictionaries and tolerant retrieval 31 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcarded terms in a bigram index
Query mon* can now be run as:
$mandmoandon
Gets us all terms with the preﬁx mon...
Sch¨ utze: Dictionaries and tolerant retrieval 31 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcarded terms in a bigram index
Query mon* can now be run as:
$mandmoandon
Gets us all terms with the preﬁx mon...
...but also many “false positives” like moon.
Sch¨ utze: Dictionaries and tolerant retrieval 31 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcarded terms in a bigram index
Query mon* can now be run as:
$mandmoandon
Gets us all terms with the preﬁx mon...
...but also many “false positives” like moon.
We must postﬁlter these terms against query.
Sch¨ utze: Dictionaries and tolerant retrieval 31 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcarded terms in a bigram index
Query mon* can now be run as:
$mandmoandon
Gets us all terms with the preﬁx mon...
...but also many “false positives” like moon.
We must postﬁlter these terms against query.
Surviving terms are then looked up in the term-document
inverted index.
Sch¨ utze: Dictionaries and tolerant retrieval 31 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcarded terms in a bigram index
Query mon* can now be run as:
$mandmoandon
Gets us all terms with the preﬁx mon...
...but also many “false positives” like moon.
We must postﬁlter these terms against query.
Surviving terms are then looked up in the term-document
inverted index.
k-gram index vs. permuterm index
Sch¨ utze: Dictionaries and tolerant retrieval 31 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcarded terms in a bigram index
Query mon* can now be run as:
$mandmoandon
Gets us all terms with the preﬁx mon...
...but also many “false positives” like moon.
We must postﬁlter these terms against query.
Surviving terms are then looked up in the term-document
inverted index.
k-gram index vs. permuterm index
k-gram index is more space eﬃcient.
Sch¨ utze: Dictionaries and tolerant retrieval 31 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcarded terms in a bigram index
Query mon* can now be run as:
$mandmoandon
Gets us all terms with the preﬁx mon...
...but also many “false positives” like moon.
We must postﬁlter these terms against query.
Surviving terms are then looked up in the term-document
inverted index.
k-gram index vs. permuterm index
k-gram index is more space eﬃcient.
Permuterm index doesn’t require postﬁltering.
Sch¨ utze: Dictionaries and tolerant retrieval 31 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise
Sch¨ utze: Dictionaries and tolerant retrieval 32 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise
Google has very limited support for wildcard queries.
Sch¨ utze: Dictionaries and tolerant retrieval 32 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise
Google has very limited support for wildcard queries.
For example, this query doesn’t work very well on Google:
[gen* universit*]
Sch¨ utze: Dictionaries and tolerant retrieval 32 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise
Google has very limited support for wildcard queries.
For example, this query doesn’t work very well on Google:
[gen* universit*]
Intention: you are looking for the University of Geneva, but
don’t know which accents to use for the French words for
university and Geneva.
Sch¨ utze: Dictionaries and tolerant retrieval 32 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise
Google has very limited support for wildcard queries.
For example, this query doesn’t work very well on Google:
[gen* universit*]
Intention: you are looking for the University of Geneva, but
don’t know which accents to use for the French words for
university and Geneva.
According to Google search basics, 2010-04-29: “Note that
the * operator works only on whole words, not parts of words.”
Sch¨ utze: Dictionaries and tolerant retrieval 32 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise
Google has very limited support for wildcard queries.
For example, this query doesn’t work very well on Google:
[gen* universit*]
Intention: you are looking for the University of Geneva, but
don’t know which accents to use for the French words for
university and Geneva.
According to Google search basics, 2010-04-29: “Note that
the * operator works only on whole words, not parts of words.”
But this is not entirely true. Try [pythag*] and [m*nchen]
Sch¨ utze: Dictionaries and tolerant retrieval 32 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise
Google has very limited support for wildcard queries.
For example, this query doesn’t work very well on Google:
[gen* universit*]
Intention: you are looking for the University of Geneva, but
don’t know which accents to use for the French words for
university and Geneva.
According to Google search basics, 2010-04-29: “Note that
the * operator works only on whole words, not parts of words.”
But this is not entirely true. Try [pythag*] and [m*nchen]
Exercise: Why doesn’t Google fully support wildcard queries?
Sch¨ utze: Dictionaries and tolerant retrieval 32 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Problem 1: we must potentially execute a large number of
Boolean queries.
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Problem 1: we must potentially execute a large number of
Boolean queries.
Most straightforward semantics: Conjunction of disjunctions
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Problem 1: we must potentially execute a large number of
Boolean queries.
Most straightforward semantics: Conjunction of disjunctions
For [gen* universit*]: geneva university orgeneva universit´ e
orgen` eve university orgen` eve universit´ e orgeneral
universities or...
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Problem 1: we must potentially execute a large number of
Boolean queries.
Most straightforward semantics: Conjunction of disjunctions
For [gen* universit*]: geneva university orgeneva universit´ e
orgen` eve university orgen` eve universit´ e orgeneral
universities or...
Very expensive
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Problem 1: we must potentially execute a large number of
Boolean queries.
Most straightforward semantics: Conjunction of disjunctions
For [gen* universit*]: geneva university orgeneva universit´ e
orgen` eve university orgen` eve universit´ e orgeneral
universities or...
Very expensive
Problem 2: Users hate to type.
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Problem 1: we must potentially execute a large number of
Boolean queries.
Most straightforward semantics: Conjunction of disjunctions
For [gen* universit*]: geneva university orgeneva universit´ e
orgen` eve university orgen` eve universit´ e orgeneral
universities or...
Very expensive
Problem 2: Users hate to type.
If abbreviated queries like [pyth* theo*] for [pythagoras’
theorem] are allowed, users will use them a lot.
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Problem 1: we must potentially execute a large number of
Boolean queries.
Most straightforward semantics: Conjunction of disjunctions
For [gen* universit*]: geneva university orgeneva universit´ e
orgen` eve university orgen` eve universit´ e orgeneral
universities or...
Very expensive
Problem 2: Users hate to type.
If abbreviated queries like [pyth* theo*] for [pythagoras’
theorem] are allowed, users will use them a lot.
This would signiﬁcantly increase the cost of answering queries .
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Processing wildcard queries in the term-document index
Problem 1: we must potentially execute a large number of
Boolean queries.
Most straightforward semantics: Conjunction of disjunctions
For [gen* universit*]: geneva university orgeneva universit´ e
orgen` eve university orgen` eve universit´ e orgeneral
universities or...
Very expensive
Problem 2: Users hate to type.
If abbreviated queries like [pyth* theo*] for [pythagoras’
theorem] are allowed, users will use them a lot.
This would signiﬁcantly increase the cost of answering queries .
Somewhat alleviated by Google Suggest
Sch¨ utze: Dictionaries and tolerant retrieval 33 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Outline
1Recap
2Dictionaries
3Wildcard queries
4Edit distance
5Spelling correction
6Soundex
Sch¨ utze: Dictionaries and tolerant retrieval 34 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
The edit distance between string s1and string s2is the
minimum number of basic operations that convert s1tos2.
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
The edit distance between string s1and string s2is the
minimum number of basic operations that convert s1tos2.
Levenshtein distance: The admissible basic operations are
insert, delete, and replace
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
The edit distance between string s1and string s2is the
minimum number of basic operations that convert s1tos2.
Levenshtein distance: The admissible basic operations are
insert, delete, and replace
Levenshtein distance dog-do: 1
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
The edit distance between string s1and string s2is the
minimum number of basic operations that convert s1tos2.
Levenshtein distance: The admissible basic operations are
insert, delete, and replace
Levenshtein distance dog-do: 1
Levenshtein distance cat-cart: 1
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
The edit distance between string s1and string s2is the
minimum number of basic operations that convert s1tos2.
Levenshtein distance: The admissible basic operations are
insert, delete, and replace
Levenshtein distance dog-do: 1
Levenshtein distance cat-cart: 1
Levenshtein distance cat-cut: 1
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
The edit distance between string s1and string s2is the
minimum number of basic operations that convert s1tos2.
Levenshtein distance: The admissible basic operations are
insert, delete, and replace
Levenshtein distance dog-do: 1
Levenshtein distance cat-cart: 1
Levenshtein distance cat-cut: 1
Levenshtein distance cat-act: 2
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
The edit distance between string s1and string s2is the
minimum number of basic operations that convert s1tos2.
Levenshtein distance: The admissible basic operations are
insert, delete, and replace
Levenshtein distance dog-do: 1
Levenshtein distance cat-cart: 1
Levenshtein distance cat-cut: 1
Levenshtein distance cat-act: 2
Damerau-Levenshtein distance cat-act: 1
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Edit distance
The edit distance between string s1and string s2is the
minimum number of basic operations that convert s1tos2.
Levenshtein distance: The admissible basic operations are
insert, delete, and replace
Levenshtein distance dog-do: 1
Levenshtein distance cat-cart: 1
Levenshtein distance cat-cut: 1
Levenshtein distance cat-act: 2
Damerau-Levenshtein distance cat-act: 1
Damerau-Levenshtein includes transposition as a fourth
possible operation.
Sch¨ utze: Dictionaries and tolerant retrieval 35 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Levenshtein distance: Computation
fast
01234
c11234
a22123
t33222
s44323
Sch¨ utze: Dictionaries and tolerant retrieval 36 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Levenshtein distance: Algorithm
LevenshteinDistance (s1,s2)
1fori←0to|s1|
2dom[i,0] =i
3forj←0to|s2|
4dom[0,j] =j
5fori←1to|s1|
6do forj←1to|s2|
7do ifs1[i] =s2[j]
8 thenm[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]}
9 elsem[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]+1}
10returnm[|s1|,|s2|]
Operations: insert (cost 1), delete (cost 1), replace (cost 1), copy
(cost 0)
Sch¨ utze: Dictionaries and tolerant retrieval 37 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Levenshtein distance: Algorithm
LevenshteinDistance (s1,s2)
1fori←0to|s1|
2dom[i,0] =i
3forj←0to|s2|
4dom[0,j] =j
5fori←1to|s1|
6do forj←1to|s2|
7do ifs1[i] =s2[j]
8 thenm[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]}
9 elsem[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]+1}
10returnm[|s1|,|s2|]
Operations: insert (cost 1) , delete (cost 1), replace (cost 1), copy
(cost 0)
Sch¨ utze: Dictionaries and tolerant retrieval 38 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Levenshtein distance: Algorithm
LevenshteinDistance (s1,s2)
1fori←0to|s1|
2dom[i,0] =i
3forj←0to|s2|
4dom[0,j] =j
5fori←1to|s1|
6do forj←1to|s2|
7do ifs1[i] =s2[j]
8 thenm[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]}
9 elsem[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]+1}
10returnm[|s1|,|s2|]
Operations: insert (cost 1), delete (cost 1) , replace (cost 1), copy
(cost 0)
Sch¨ utze: Dictionaries and tolerant retrieval 39 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Levenshtein distance: Algorithm
LevenshteinDistance (s1,s2)
1fori←0to|s1|
2dom[i,0] =i
3forj←0to|s2|
4dom[0,j] =j
5fori←1to|s1|
6do forj←1to|s2|
7do ifs1[i] =s2[j]
8 thenm[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]}
9 elsem[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]+1}
10returnm[|s1|,|s2|]
Operations: insert (cost 1), delete (cost 1), replace (cost 1) , copy
(cost 0)
Sch¨ utze: Dictionaries and tolerant retrieval 40 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Levenshtein distance: Algorithm
LevenshteinDistance (s1,s2)
1fori←0to|s1|
2dom[i,0] =i
3forj←0to|s2|
4dom[0,j] =j
5fori←1to|s1|
6do forj←1to|s2|
7do ifs1[i] =s2[j]
8 thenm[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]}
9 elsem[i,j] = min{m[i-1,j]+1,m[i,j-1]+1,m[i-1,j-1]+1}
10returnm[|s1|,|s2|]
Operations: insert (cost 1), delete (cost 1), replace (cost 1), copy
(cost 0)
Sch¨ utze: Dictionaries and tolerant retrieval 41 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Levenshtein distance: Example
f a s t
011223344
c1
112
2123
2234
3345
44
a2
222
3213
3134
2245
33
t3
333
4332
4223
3224
32
s4
444
5443
5323
4233
33
Sch¨ utze: Dictionaries and tolerant retrieval 42 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Each cell of Levenshtein matrix
cost of getting here from
my upper left neighbor
(copy or replace)cost of getting here
from my upper neighbor
(delete)
cost of getting here from
my left neighbor (insert)the minimum of the
three possible “move-
ments”; the cheapest
way of getting here
Sch¨ utze: Dictionaries and tolerant retrieval 43 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Levenshtein distance: Example
f a s t
011223344
c1
112
2123
2234
3345
44
a2
222
3213
3134
2245
33
t3
333
4332
4223
3224
32
s4
444
5443
5323
4233
33
Sch¨ utze: Dictionaries and tolerant retrieval 44 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Dynamic programming (Cormen et al.)
Sch¨ utze: Dictionaries and tolerant retrieval 45 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Dynamic programming (Cormen et al.)
Optimal substructure: The optimal solution to the problem
contains within it subsolutions , i.e., optimal solutions to
subproblems.
Sch¨ utze: Dictionaries and tolerant retrieval 45 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Dynamic programming (Cormen et al.)
Optimal substructure: The optimal solution to the problem
contains within it subsolutions , i.e., optimal solutions to
subproblems.
Overlapping subsolutions: The subsolutions overlap. These
subsolutions are computed over and over again when
computing the global optimal solution in a brute-force
algorithm.
Sch¨ utze: Dictionaries and tolerant retrieval 45 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Dynamic programming (Cormen et al.)
Optimal substructure: The optimal solution to the problem
contains within it subsolutions , i.e., optimal solutions to
subproblems.
Overlapping subsolutions: The subsolutions overlap. These
subsolutions are computed over and over again when
computing the global optimal solution in a brute-force
algorithm.
Subproblem in the case of edit distance: what is the edit
distance of two preﬁxes
Sch¨ utze: Dictionaries and tolerant retrieval 45 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Dynamic programming (Cormen et al.)
Optimal substructure: The optimal solution to the problem
contains within it subsolutions , i.e., optimal solutions to
subproblems.
Overlapping subsolutions: The subsolutions overlap. These
subsolutions are computed over and over again when
computing the global optimal solution in a brute-force
algorithm.
Subproblem in the case of edit distance: what is the edit
distance of two preﬁxes
Overlapping subsolutions: We need most distances of preﬁxes
3 times – this corresponds to moving right, diagonally, down.
Sch¨ utze: Dictionaries and tolerant retrieval 45 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Weighted edit distance
Sch¨ utze: Dictionaries and tolerant retrieval 46 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Weighted edit distance
As above, but weight of an operation depends on the
characters involved.
Sch¨ utze: Dictionaries and tolerant retrieval 46 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Weighted edit distance
As above, but weight of an operation depends on the
characters involved.
Meant to capture keyboard errors, e.g., mmore likely to be
mistyped as nthan asq.
Sch¨ utze: Dictionaries and tolerant retrieval 46 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Weighted edit distance
As above, but weight of an operation depends on the
characters involved.
Meant to capture keyboard errors, e.g., mmore likely to be
mistyped as nthan asq.
Therefore, replacing mbynis a smaller edit distance than by
q.
Sch¨ utze: Dictionaries and tolerant retrieval 46 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Weighted edit distance
As above, but weight of an operation depends on the
characters involved.
Meant to capture keyboard errors, e.g., mmore likely to be
mistyped as nthan asq.
Therefore, replacing mbynis a smaller edit distance than by
q.
We now require a weight matrix as input.
Sch¨ utze: Dictionaries and tolerant retrieval 46 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Weighted edit distance
As above, but weight of an operation depends on the
characters involved.
Meant to capture keyboard errors, e.g., mmore likely to be
mistyped as nthan asq.
Therefore, replacing mbynis a smaller edit distance than by
q.
We now require a weight matrix as input.
Modify dynamic programming to handle weights
Sch¨ utze: Dictionaries and tolerant retrieval 46 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Using edit distance for spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 47 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Using edit distance for spelling correction
Given query, ﬁrst enumerate all character sequences within a
preset (possibly weighted) edit distance
Sch¨ utze: Dictionaries and tolerant retrieval 47 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Using edit distance for spelling correction
Given query, ﬁrst enumerate all character sequences within a
preset (possibly weighted) edit distance
Intersect this set with our list of “correct” words
Sch¨ utze: Dictionaries and tolerant retrieval 47 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Using edit distance for spelling correction
Given query, ﬁrst enumerate all character sequences within a
preset (possibly weighted) edit distance
Intersect this set with our list of “correct” words
Then suggest terms in the intersection to the user.
Sch¨ utze: Dictionaries and tolerant retrieval 47 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Using edit distance for spelling correction
Given query, ﬁrst enumerate all character sequences within a
preset (possibly weighted) edit distance
Intersect this set with our list of “correct” words
Then suggest terms in the intersection to the user.
→exercise in a few slides
Sch¨ utze: Dictionaries and tolerant retrieval 47 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise
1Compute Levenshtein distance matrix for oslo–snow
2What are the Levenshtein editing operations that transform
catintocatcat?
Sch¨ utze: Dictionaries and tolerant retrieval 48 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
1
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 49 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2?
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 50 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
21
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 51 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2?
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 52 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
22
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 53 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3?
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 54 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
32
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 55 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
3?
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 56 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
2
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 57 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3?
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 58 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
31
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 59 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2?
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 60 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
22
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 61 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3?
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 62 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
33
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 63 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
4?
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 64 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
3
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 65 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4?
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 66 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
42
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 67 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3?
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 68 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
32
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 69 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3?
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 70 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
33
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 71 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
4?
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 72 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
4
Sch¨ utze: Dictionaries and tolerant retrieval 73 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5?
Sch¨ utze: Dictionaries and tolerant retrieval 74 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
53
Sch¨ utze: Dictionaries and tolerant retrieval 75 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4?
Sch¨ utze: Dictionaries and tolerant retrieval 76 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
43
Sch¨ utze: Dictionaries and tolerant retrieval 77 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4?
Sch¨ utze: Dictionaries and tolerant retrieval 78 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
42
Sch¨ utze: Dictionaries and tolerant retrieval 79 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
3?
Sch¨ utze: Dictionaries and tolerant retrieval 80 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
33
Sch¨ utze: Dictionaries and tolerant retrieval 81 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
33
Sch¨ utze: Dictionaries and tolerant retrieval 82 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
33
How do I read out the editing operations that transform oslointosnow?
Sch¨ utze: Dictionaries and tolerant retrieval 83 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
33
cost operation inputoutput
1 insert *w
Sch¨ utze: Dictionaries and tolerant retrieval 84 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
33
cost operation inputoutput
0 (copy) oo
1 insert *w
Sch¨ utze: Dictionaries and tolerant retrieval 85 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
33
cost operation inputoutput
1 replace ln
0 (copy) oo
1 insert *w
Sch¨ utze: Dictionaries and tolerant retrieval 86 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
33
cost operation inputoutput
0 (copy) ss
1 replace ln
0 (copy) oo
1 insert *w
Sch¨ utze: Dictionaries and tolerant retrieval 87 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
s n o w
011223344
o1
112
2123
2224
3245
33
s2
212
3123
2233
3334
43
l3
332
4223
3234
3344
44
o4
443
5333
4324
4245
33
cost operation inputoutput
1 delete o*
0 (copy) ss
1 replace ln
0 (copy) oo
1 insert *w
Sch¨ utze: Dictionaries and tolerant retrieval 88 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
c a t c a t
0112233445566
c1
102
2023
1134
2235
3356
4467
55
a2
221
3102
2023
1134
2235
3356
44
t3
332
4221
3102
2023
1134
2235
33
Sch¨ utze: Dictionaries and tolerant retrieval 89 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
c a t c a t
0112233445566
c1
102
2023
1134
2235
3356
4467
55
a2
221
3102
2023
1134
2235
3356
44
t3
332
4221
3102
2023
1134
2235
33
cost operation inputoutput
1 insert *c
1 insert *a
1 insert *t
0 (copy) cc
0 (copy) aa
0 (copy) tt
Sch¨ utze: Dictionaries and tolerant retrieval 90 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
c a t c a t
0112233445566
c1
102
2023
1134
2235
3356
4467
55
a2
221
3102
2023
1134
2235
3356
44
t3
332
4221
3102
2023
1134
2235
33
cost operation inputoutput
0 (copy) cc
1 insert *a
1 insert *t
1 insert *c
0 (copy) aa
0 (copy) tt
Sch¨ utze: Dictionaries and tolerant retrieval 91 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
c a t c a t
0112233445566
c1
102
2023
1134
2235
3356
4467
55
a2
221
3102
2023
1134
2235
3356
44
t3
332
4221
3102
2023
1134
2235
33
cost operation inputoutput
0 (copy) cc
0 (copy) aa
1 insert *t
1 insert *c
1 insert *a
0 (copy) tt
Sch¨ utze: Dictionaries and tolerant retrieval 92 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
c a t c a t
0112233445566
c1
102
2023
1134
2235
3356
4467
55
a2
221
3102
2023
1134
2235
3356
44
t3
332
4221
3102
2023
1134
2235
33
cost operation inputoutput
0 (copy) cc
0 (copy) aa
0 (copy) tt
1 insert *c
1 insert *a
1 insert *t
Sch¨ utze: Dictionaries and tolerant retrieval 93 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Outline
1Recap
2Dictionaries
3Wildcard queries
4Edit distance
5Spelling correction
6Soundex
Sch¨ utze: Dictionaries and tolerant retrieval 94 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Correcting user queries
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Correcting user queries
Two diﬀerent methods for spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Correcting user queries
Two diﬀerent methods for spelling correction
Isolated word spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Correcting user queries
Two diﬀerent methods for spelling correction
Isolated word spelling correction
Check each word on its own for misspelling
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Correcting user queries
Two diﬀerent methods for spelling correction
Isolated word spelling correction
Check each word on its own for misspelling
Will not catch typos resulting in correctly spelled words, e .g.,
an asteroid that fell formthe sky
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Correcting user queries
Two diﬀerent methods for spelling correction
Isolated word spelling correction
Check each word on its own for misspelling
Will not catch typos resulting in correctly spelled words, e .g.,
an asteroid that fell formthe sky
Context-sensitive spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Correcting user queries
Two diﬀerent methods for spelling correction
Isolated word spelling correction
Check each word on its own for misspelling
Will not catch typos resulting in correctly spelled words, e .g.,
an asteroid that fell formthe sky
Context-sensitive spelling correction
Look at surrounding words
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Two principal uses
Correcting documents being indexed
Correcting user queries
Two diﬀerent methods for spelling correction
Isolated word spelling correction
Check each word on its own for misspelling
Will not catch typos resulting in correctly spelled words, e .g.,
an asteroid that fell formthe sky
Context-sensitive spelling correction
Look at surrounding words
Can correct form/fromerror above
Sch¨ utze: Dictionaries and tolerant retrieval 95 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting documents
Sch¨ utze: Dictionaries and tolerant retrieval 96 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting documents
We’re not interested in interactive spelling correction of
documents (e.g., MS Word) in this class.
Sch¨ utze: Dictionaries and tolerant retrieval 96 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting documents
We’re not interested in interactive spelling correction of
documents (e.g., MS Word) in this class.
In IR, we use document correction primarily for OCR’ed
documents. (OCR = optical character recognition)
Sch¨ utze: Dictionaries and tolerant retrieval 96 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting documents
We’re not interested in interactive spelling correction of
documents (e.g., MS Word) in this class.
In IR, we use document correction primarily for OCR’ed
documents. (OCR = optical character recognition)
The general philosophy in IR is: don’t change the documents.
Sch¨ utze: Dictionaries and tolerant retrieval 96 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting queries
Sch¨ utze: Dictionaries and tolerant retrieval 97 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting queries
First: isolated word spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 97 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting queries
First: isolated word spelling correction
Premise 1: There is a list of “correct words” from which the
correct spellings come.
Sch¨ utze: Dictionaries and tolerant retrieval 97 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting queries
First: isolated word spelling correction
Premise 1: There is a list of “correct words” from which the
correct spellings come.
Premise 2: We have a way of computing the distancebetween
a misspelled word and a correct word.
Sch¨ utze: Dictionaries and tolerant retrieval 97 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting queries
First: isolated word spelling correction
Premise 1: There is a list of “correct words” from which the
correct spellings come.
Premise 2: We have a way of computing the distancebetween
a misspelled word and a correct word.
Simple spelling correction algorithm: return the “correct”
word that has the smallest distance to the misspelled word.
Sch¨ utze: Dictionaries and tolerant retrieval 97 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting queries
First: isolated word spelling correction
Premise 1: There is a list of “correct words” from which the
correct spellings come.
Premise 2: We have a way of computing the distancebetween
a misspelled word and a correct word.
Simple spelling correction algorithm: return the “correct”
word that has the smallest distance to the misspelled word.
Example: informaton→information
Sch¨ utze: Dictionaries and tolerant retrieval 97 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting queries
First: isolated word spelling correction
Premise 1: There is a list of “correct words” from which the
correct spellings come.
Premise 2: We have a way of computing the distancebetween
a misspelled word and a correct word.
Simple spelling correction algorithm: return the “correct”
word that has the smallest distance to the misspelled word.
Example: informaton→information
For the list of correct words, we can use the vocabulary of all
words that occur in our collection.
Sch¨ utze: Dictionaries and tolerant retrieval 97 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Correcting queries
First: isolated word spelling correction
Premise 1: There is a list of “correct words” from which the
correct spellings come.
Premise 2: We have a way of computing the distancebetween
a misspelled word and a correct word.
Simple spelling correction algorithm: return the “correct”
word that has the smallest distance to the misspelled word.
Example: informaton→information
For the list of correct words, we can use the vocabulary of all
words that occur in our collection.
Why is this problematic?
Sch¨ utze: Dictionaries and tolerant retrieval 97 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Alternatives to using the term vocabulary
Sch¨ utze: Dictionaries and tolerant retrieval 98 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Alternatives to using the term vocabulary
A standard dictionary (Webster’s, OED etc.)
Sch¨ utze: Dictionaries and tolerant retrieval 98 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Alternatives to using the term vocabulary
A standard dictionary (Webster’s, OED etc.)
An industry-speciﬁc dictionary (for specialized IR systems)
Sch¨ utze: Dictionaries and tolerant retrieval 98 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Alternatives to using the term vocabulary
A standard dictionary (Webster’s, OED etc.)
An industry-speciﬁc dictionary (for specialized IR systems)
The term vocabulary of the collection, appropriately weighted
Sch¨ utze: Dictionaries and tolerant retrieval 98 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Distance between misspelled word and “correct” word
Sch¨ utze: Dictionaries and tolerant retrieval 99 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Distance between misspelled word and “correct” word
Several alternatives
Sch¨ utze: Dictionaries and tolerant retrieval 99 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Distance between misspelled word and “correct” word
Several alternatives
Edit distance and Levenshtein distance
Sch¨ utze: Dictionaries and tolerant retrieval 99 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Distance between misspelled word and “correct” word
Several alternatives
Edit distance and Levenshtein distance
Weighted edit distance
Sch¨ utze: Dictionaries and tolerant retrieval 99 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Distance between misspelled word and “correct” word
Several alternatives
Edit distance and Levenshtein distance
Weighted edit distance
k-gram overlap
Sch¨ utze: Dictionaries and tolerant retrieval 99 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 100 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Now that we can compute edit distance: how to use it for
isolated word spelling correction – this is the last slide in thi s
section.
Sch¨ utze: Dictionaries and tolerant retrieval 100 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Now that we can compute edit distance: how to use it for
isolated word spelling correction – this is the last slide in thi s
section.
k-gram indexes for isolated word spelling correction.
Sch¨ utze: Dictionaries and tolerant retrieval 100 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Now that we can compute edit distance: how to use it for
isolated word spelling correction – this is the last slide in thi s
section.
k-gram indexes for isolated word spelling correction.
Context-sensitive spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 100 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Spelling correction
Now that we can compute edit distance: how to use it for
isolated word spelling correction – this is the last slide in thi s
section.
k-gram indexes for isolated word spelling correction.
Context-sensitive spelling correction
General issues
Sch¨ utze: Dictionaries and tolerant retrieval 100 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes for spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 101 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes for spelling correction
Enumerate all k-grams in the query term
Sch¨ utze: Dictionaries and tolerant retrieval 101 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes for spelling correction
Enumerate all k-grams in the query term
Example: bigram index, misspelled word bordroom
Sch¨ utze: Dictionaries and tolerant retrieval 101 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes for spelling correction
Enumerate all k-grams in the query term
Example: bigram index, misspelled word bordroom
Bigrams: bo, or, rd, dr, ro, oo, om
Sch¨ utze: Dictionaries and tolerant retrieval 101 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes for spelling correction
Enumerate all k-grams in the query term
Example: bigram index, misspelled word bordroom
Bigrams: bo, or, rd, dr, ro, oo, om
Use thek-gram index to retrieve “correct” words that match
query term k-grams
Sch¨ utze: Dictionaries and tolerant retrieval 101 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes for spelling correction
Enumerate all k-grams in the query term
Example: bigram index, misspelled word bordroom
Bigrams: bo, or, rd, dr, ro, oo, om
Use thek-gram index to retrieve “correct” words that match
query term k-grams
Threshold by number of matching k-grams
Sch¨ utze: Dictionaries and tolerant retrieval 101 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes for spelling correction
Enumerate all k-grams in the query term
Example: bigram index, misspelled word bordroom
Bigrams: bo, or, rd, dr, ro, oo, om
Use thek-gram index to retrieve “correct” words that match
query term k-grams
Threshold by number of matching k-grams
E.g., only vocabulary terms that diﬀer by at most 3 k-grams
Sch¨ utze: Dictionaries and tolerant retrieval 101 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
k-gram indexes for spelling correction: bordroom
rd aboard ardent boardroom borderor border lord morbid sordidbo aboard about boardroom border
✲ ✲ ✲ ✲✲ ✲ ✲ ✲✲ ✲ ✲ ✲
Sch¨ utze: Dictionaries and tolerant retrieval 102 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Retrieve “correct” terms close to each query term
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Retrieve “correct” terms close to each query term
forﬂew form munich :ﬂeaforﬂew,fromforform,munchfor
munich
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Retrieve “correct” terms close to each query term
forﬂew form munich :ﬂeaforﬂew,fromforform,munchfor
munich
Now try all possible resulting phrases as queries with one wo rd
“ﬁxed” at a time
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Retrieve “correct” terms close to each query term
forﬂew form munich :ﬂeaforﬂew,fromforform,munchfor
munich
Now try all possible resulting phrases as queries with one wo rd
“ﬁxed” at a time
Try query “ﬂea form munich”
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Retrieve “correct” terms close to each query term
forﬂew form munich :ﬂeaforﬂew,fromforform,munchfor
munich
Now try all possible resulting phrases as queries with one wo rd
“ﬁxed” at a time
Try query “ﬂea form munich”
Try query “ﬂew from munich”
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Retrieve “correct” terms close to each query term
forﬂew form munich :ﬂeaforﬂew,fromforform,munchfor
munich
Now try all possible resulting phrases as queries with one wo rd
“ﬁxed” at a time
Try query “ﬂea form munich”
Try query “ﬂew from munich”
Try query “ﬂew form munch ”
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Retrieve “correct” terms close to each query term
forﬂew form munich :ﬂeaforﬂew,fromforform,munchfor
munich
Now try all possible resulting phrases as queries with one wo rd
“ﬁxed” at a time
Try query “ﬂea form munich”
Try query “ﬂew from munich”
Try query “ﬂew form munch ”
The correct query “ﬂew from munich” has the most hits.
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Our example was: an asteroid that fell formthe sky
How can we correct formhere?
One idea: hit-based spelling correction
Retrieve “correct” terms close to each query term
forﬂew form munich :ﬂeaforﬂew,fromforform,munchfor
munich
Now try all possible resulting phrases as queries with one wo rd
“ﬁxed” at a time
Try query “ﬂea form munich”
Try query “ﬂew from munich”
Try query “ﬂew form munch ”
The correct query “ﬂew from munich” has the most hits.
Suppose we have 7 alternatives for ﬂew, 20 forformand 3 for
munich, how many “corrected” phrases will we enumerate?
Sch¨ utze: Dictionaries and tolerant retrieval 103 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 104 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
The “hit-based” algorithm we just outlined is not very
eﬃcient.
Sch¨ utze: Dictionaries and tolerant retrieval 104 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Context-sensitive spelling correction
The “hit-based” algorithm we just outlined is not very
eﬃcient.
More eﬃcient alternative: look at “collection” of queries, not
documents
Sch¨ utze: Dictionaries and tolerant retrieval 104 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Did you mean only works for one suggestion.
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Did you mean only works for one suggestion.
What about multiple possible corrections?
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Did you mean only works for one suggestion.
What about multiple possible corrections?
Tradeoﬀ: simple vs. powerful UI
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Did you mean only works for one suggestion.
What about multiple possible corrections?
Tradeoﬀ: simple vs. powerful UI
Cost
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Did you mean only works for one suggestion.
What about multiple possible corrections?
Tradeoﬀ: simple vs. powerful UI
Cost
Spelling correction is potentially expensive.
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Did you mean only works for one suggestion.
What about multiple possible corrections?
Tradeoﬀ: simple vs. powerful UI
Cost
Spelling correction is potentially expensive.
Avoid running on every query?
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Did you mean only works for one suggestion.
What about multiple possible corrections?
Tradeoﬀ: simple vs. powerful UI
Cost
Spelling correction is potentially expensive.
Avoid running on every query?
Maybe just on queries that match few documents.
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
General issues in spelling correction
User interface
automatic vs. suggested correction
Did you mean only works for one suggestion.
What about multiple possible corrections?
Tradeoﬀ: simple vs. powerful UI
Cost
Spelling correction is potentially expensive.
Avoid running on every query?
Maybe just on queries that match few documents.
Guess: Spelling correction of major search engines is eﬃcie nt
enough to be run on every query.
Sch¨ utze: Dictionaries and tolerant retrieval 105 / 114Recap Dictionaries Wildcard queries Edit distance Spelling correction Soundex
Exercise: Understand Peter Norvig’s spelling corrector
import re, collections
def words(text): return re.findall(’[a-z]+’, text.lower ())
def train(features):
model = collections.defaultdict(lambda: 1)
for f in features:
model[f] += 1
return model
NWORDS = train(words(file(’big.txt’).read()))
alphabet = ’abcdefghijklmnopqrstuvwxyz’
def edits1(word):
splits = [(word[:i], word[i:]) for i in range(len(word) + 1) ]
deletes = [a + b[1:] for a, b in splits if b]
transposes = [a + b[1] + b[0] + b[2:] for a, b in splits if len(b) gt 1]
replaces = [a + c + b[1:] for a, b in splits for c in alphabet if b]
inserts = [a + c + b for a, b in splits for c in alphabet]
return set(deletes + transposes + replaces + inserts)
def known_edits2(word):
return set(e2 for e1 in edits1(word) for e2 in edits1(e1) if e 2 in NWORDS)
def known(words): return set(w for w in words if w in NWORDS)
def correct(word):
candidates = known([word]) or known(edits1(word)) or know n_edits2(word) or [word]
return max(candidates, key=NWORDS.get)
Sch¨ utze: Dictionaries and tolerant retrieval 106 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Outline
1Recap
2Dictionaries
3Wildcard queries
4Edit distance
5Spelling correction
6Soundex
Sch¨ utze: Dictionaries and tolerant retrieval 107 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Soundex
Sch¨ utze: Dictionaries and tolerant retrieval 108 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Soundex
Soundex is the basis for ﬁnding phonetic (as opposed to
orthographic) alternatives.
Sch¨ utze: Dictionaries and tolerant retrieval 108 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Soundex
Soundex is the basis for ﬁnding phonetic (as opposed to
orthographic) alternatives.
Example: chebyshev / tchebyscheﬀ
Sch¨ utze: Dictionaries and tolerant retrieval 108 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Soundex
Soundex is the basis for ﬁnding phonetic (as opposed to
orthographic) alternatives.
Example: chebyshev / tchebyscheﬀ
Algorithm:
Sch¨ utze: Dictionaries and tolerant retrieval 108 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Soundex
Soundex is the basis for ﬁnding phonetic (as opposed to
orthographic) alternatives.
Example: chebyshev / tchebyscheﬀ
Algorithm:
Turn every token to be indexed into a 4-character reduced for m
Sch¨ utze: Dictionaries and tolerant retrieval 108 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Soundex
Soundex is the basis for ﬁnding phonetic (as opposed to
orthographic) alternatives.
Example: chebyshev / tchebyscheﬀ
Algorithm:
Turn every token to be indexed into a 4-character reduced for m
Do the same with query terms
Sch¨ utze: Dictionaries and tolerant retrieval 108 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Soundex
Soundex is the basis for ﬁnding phonetic (as opposed to
orthographic) alternatives.
Example: chebyshev / tchebyscheﬀ
Algorithm:
Turn every token to be indexed into a 4-character reduced for m
Do the same with query terms
Build and search an index on the reduced forms
Sch¨ utze: Dictionaries and tolerant retrieval 108 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Soundex algorithm
1Retain the ﬁrst letter of the term.
2Change all occurrences of the following letters to ’0’ (zero): A, E, I,
O, U, H, W, Y
3Change letters to digits as follows:
B, F, P, V to 1
C, G, J, K, Q, S, X, Z to 2
D,T to 3
L to 4
M, N to 5
R to 6
4Repeatedly remove one out of each pair of consecutive identic al digits
5Remove all zeros from the resulting string; pad the resulting strin g
with trailing zeros and return the ﬁrst four positions, which will
consist of a letter followed by three digits
Sch¨ utze: Dictionaries and tolerant retrieval 109 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Example: Soundex of HERMAN
Sch¨ utze: Dictionaries and tolerant retrieval 110 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Example: Soundex of HERMAN
Retain H
Sch¨ utze: Dictionaries and tolerant retrieval 110 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Example: Soundex of HERMAN
Retain H
ERMAN→0RM0N
Sch¨ utze: Dictionaries and tolerant retrieval 110 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Example: Soundex of HERMAN
Retain H
ERMAN→0RM0N
0RM0N→06505
Sch¨ utze: Dictionaries and tolerant retrieval 110 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Example: Soundex of HERMAN
Retain H
ERMAN→0RM0N
0RM0N→06505
06505→06505
Sch¨ utze: Dictionaries and tolerant retrieval 110 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Example: Soundex of HERMAN
Retain H
ERMAN→0RM0N
0RM0N→06505
06505→06505
06505→655
Sch¨ utze: Dictionaries and tolerant retrieval 110 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Example: Soundex of HERMAN
Retain H
ERMAN→0RM0N
0RM0N→06505
06505→06505
06505→655
ReturnH655
Sch¨ utze: Dictionaries and tolerant retrieval 110 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Example: Soundex of HERMAN
Retain H
ERMAN→0RM0N
0RM0N→06505
06505→06505
06505→655
ReturnH655
Note:HERMANN will generate the same code
Sch¨ utze: Dictionaries and tolerant retrieval 110 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
How useful is Soundex?
Sch¨ utze: Dictionaries and tolerant retrieval 111 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
How useful is Soundex?
Not very – for information retrieval
Sch¨ utze: Dictionaries and tolerant retrieval 111 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
How useful is Soundex?
Not very – for information retrieval
Ok for “high recall” tasks in other applications (e.g., Interp ol)
Sch¨ utze: Dictionaries and tolerant retrieval 111 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
How useful is Soundex?
Not very – for information retrieval
Ok for “high recall” tasks in other applications (e.g., Interp ol)
Zobel and Dart (1996) suggest better alternatives for phoneti c
matching in IR.
Sch¨ utze: Dictionaries and tolerant retrieval 111 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Exercise
Compute Soundex code of your last name
Sch¨ utze: Dictionaries and tolerant retrieval 112 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Take-away
Tolerant retrieval: What to do if there is no exact match
between query term and document term
Wildcard queries
Spelling correction
Sch¨ utze: Dictionaries and tolerant retrieval 113 / 114Recap Dictionaries Wildcard queries Edit distance Spellin g correction Soundex
Resources
Chapter 3 of IIR
Resources at http://cislmu.org
trie vs hash vs ternary tree
Soundex demo
Edit distance demo
Peter Norvig’s spelling corrector
Google: wild card search, spelling correction gone wrong, a
misspelling that is more frequent that the correct spelling
Sch¨ utze: Dictionaries and tolerant retrieval 114 / 114